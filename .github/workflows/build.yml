name: Build

on:
  pull_request:
    branches:
    - develop
  push:
    branches:
    - develop
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.3.0'

      - name: Authenticate with private NPM package
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPMJS_TOKEN }}" > ~/.npmrc

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

  build_push_container:
    if: >
      ( github.ref == 'refs/heads/develop' && github.event_name == 'push' ) ||
      ( github.event_name == 'pull_request' )
    name: Build and push docker image
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/docker-build.yml@main
    with:
      runs_on: ubuntu-latest
      image_registry: "docker.io"
      image_organization: "radixdlt"
      image_name: "connect-button-storybook"
      tags: |
        type=ref,event=branch
        type=ref,event=pr
        type=semver,pattern={{version}}
        type=semver,pattern={{major}}.{{minor}}
        type=semver,pattern={{major}}
        type=sha
      context: "."
      dockerfile: "./Dockerfile"
      platforms: "linux/amd64"
      provenance: "false"
      enable_gcr: "false"
    secrets:
      workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
      service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

  deploy-pr:
    if: ${{ github.event_name == 'pull_request' }}
    name: Deploy PR
    runs-on: ubuntu-latest
    needs:
      - build_push_container
    permissions:
      id-token: write
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - uses: unfor19/install-aws-cli-action@457b7980b125044247e455d87b9a26fc2299b787
        with:
          version: 2
      - name: Setup helmfile and helm
        uses: mamezou-tech/setup-helmfile@55ae2a66c5af4883148b7a50cc6ddc9b61042184
        with:
          helm-diff-plugin-version: "v3.1.3"
          helmfile-version: "v0.144.0"
          helm-version: "v3.11.0"
          install-kubectl: no
      - name: Install kubectl
        uses: azure/setup-kubectl@901a10e89ea615cf61f57ac05cecdf23e7de06d8 #v3.2
        with:
          version: "v1.25.6"
      - name: Configure AWS credentials for deployment
        uses: aws-actions/configure-aws-credentials@bab55d3830fe69833c9fecaa51fe2c829a7508f3
        with:
          role-to-assume: ${{ secrets.DEPLOY_PR_IAM_ROLE }}
          aws-region: eu-west-2
      - name: Deploy application
        working-directory: deploy/helm
        run: |
          cat <<DOC > namespace.yaml
          apiVersion: hnc.x-k8s.io/v1alpha2
          kind: SubnamespaceAnchor
          metadata:
            name: connect-button-pr-${{ github.event.number }}
            namespace: connect-button-ci-pr
          DOC

          aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} \
                                    --alias ${{ secrets.CLUSTER_NAME }} \
                                    --region eu-west-2

          kubectl apply -f namespace.yaml

          helmfile --environment pr --namespace connect-button-pr-${{ github.event.number }} \
                    --state-values-set "ci.tag=${{ env.CI_TAG }}" \
                    --state-values-set "ci.ingressDomain=${{ env.INGRESS_DOMAIN }}" \
                    apply
        env:
          CI_TAG: ${{ fromJSON(needs.build_push_container.outputs.json).labels['org.opencontainers.image.version'] }}
          INGRESS_DOMAIN: connect-button-storybook-pr-${{ github.event.number}}.${{ secrets.INGRESS_DOMAIN }}
          HELM_GH_USER: ${{ secrets.HELM_GH_USER }}
          HELM_GH_PASS: ${{ secrets.HELM_GH_PASS }}

  deploy-dev:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    name: Deploy DEV
    runs-on: ubuntu-latest
    needs:
      - build_push_container
    permissions:
      id-token: write
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - uses: unfor19/install-aws-cli-action@457b7980b125044247e455d87b9a26fc2299b787
        with:
          version: 2
      - name: Setup helmfile and helm
        uses: mamezou-tech/setup-helmfile@55ae2a66c5af4883148b7a50cc6ddc9b61042184
        with:
          helm-diff-plugin-version: "v3.1.3"
          helmfile-version: "v0.144.0"
          helm-version: "v3.11.0"
          install-kubectl: no
      - name: Install kubectl
        uses: azure/setup-kubectl@901a10e89ea615cf61f57ac05cecdf23e7de06d8 #v3.2
        with:
          version: "v1.25.6"
      - name: Configure AWS credentials for deployment
        uses: aws-actions/configure-aws-credentials@bab55d3830fe69833c9fecaa51fe2c829a7508f3
        with:
          role-to-assume: ${{ secrets.DEPLOY_DEV_IAM_ROLE }}
          aws-region: eu-west-2
      - name: Deploy application
        working-directory: deploy/helm
        run: |
          aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} \
                                    --alias ${{ secrets.CLUSTER_NAME }} \
                                    --region eu-west-2

          helmfile --environment dev --namespace connect-button-dev \
                    --state-values-set "ci.tag=${{ env.CI_TAG }}" \
                    --state-values-set "ci.ingressDomain=${{ env.INGRESS_DOMAIN }}" \
                    apply
        env:
          CI_TAG: ${{ fromJSON(needs.build_push_container.outputs.json).labels['org.opencontainers.image.version'] }}
          INGRESS_DOMAIN: connect-button-storybook-dev.${{ secrets.INGRESS_DOMAIN }}
          HELM_GH_USER: ${{ secrets.HELM_GH_USER }}
          HELM_GH_PASS: ${{ secrets.HELM_GH_PASS }}